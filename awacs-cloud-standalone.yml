version: '3.3'
services:
  hystrix:
    image: gcr.io/awacs-cloud-prod/hystrix-dashboard:latest
    ports:
      - 7788:7788/tcp
    expose:
      - 7788
    links:
      - config
  config:
    image: gcr.io/awacs-cloud-prod/awacs-cloud-config-server:latest
    expose:
      - 80
    environment:
       PORT: 80
       debug: 'true'
       GITHUB_TOKEN: 174043677fec9b5e9bf16959ecebea93e9e39864
       logging.level.org.springframework.cloud.config: debug
       spring.cloud.config.server.git.uri: https://github.com/girishaiocdawacs/scotch-repo
  peer1:
    image: gcr.io/awacs-cloud-prod/awacs-cloud-discovery:latest
    hostname: peer1
    expose:
      - 80
    depends_on:
      - config
    environment:
      PORT: '80'
      spring.cloud.config.enabled: 'true'
      spring.cloud.discovery.enabled: 'false'
      spring.cloud.service-registry.auto-registration.enabled: 'true'
      spring.cloud.config.uri: http://config/
      spring.application.name: 'discovery'
      spring.profiles.active: peer1
      eureka.client.service-url.defaultZone: http://admin:admin@peer1/eureka/

  bootstrap:
    image: gcr.io/awacs-cloud-prod/services-dashboard:latest
    expose:
      - 80
    depends_on:
      - config
    links:
      - peer1
      - config
    environment:
          PORT: '80'
          spring.application.name: 'bootstrap'
          spring.profiles.active: prod
          spring.cloud.config.enabled: 'true'
          spring.cloud.discovery.enabled: 'false'
          spring.cloud.service-registry.auto-registration.enabled: 'true'
          spring.cloud.config.uri: http://config/

  adminserver:
    image: gcr.io/awacs-cloud-prod/admin-server:latest
    restart: always
    expose:
     - 80
    environment:
      PORT: '80'
      spring.application.name: 'adminserver'
      spring.cloud.bootstrap.enabled: 'true'

  socialweb:
    image: gcr.io/awacs-cloud-prod/smart-pharmacy-user-management:latest
    restart: always
    expose:
     - 80
    depends_on:
       - config
    links:
       - peer1
       - adminserver
       - config
    environment:
      PORT: 80
      spring.cloud.config.uri: http://config/
      spring.application.name: 'authserver'
      spring.profiles.active: prod
      spring.cloud.config.enabled: 'true'
      spring.cloud.discovery.enabled: 'false'
      spring.cloud.service-registry.auto-registration.enabled: 'false'
      server.forward-headers-strategy: native
      spring.cloud.config.fail-fast: 'true'
      eureka.client.service-url.defaultZone: http://admin:admin@peer1/eureka/

  authserver:
    image: gcr.io/awacs-cloud-prod/awacs-cloud-auth-server:latest
    restart: always
    expose:
     - 80
     - 9345
    links:
      - db
      - config
      - peer1
      - adminserver
    depends_on:
      - db
      - config
      - peer1
    environment:
        PORT: 80
        GRPC_PORT: 9345
        spring.cloud.config.uri: http://config/
        spring.application.name: 'authserver'
        spring.profiles.active: prod
        spring.cloud.config.enabled: 'true'
        spring.cloud.discovery.enabled: 'false'
        spring.cloud.service-registry.auto-registration.enabled: 'false'
        server.forward-headers-strategy: native
        spring.cloud.config.fail-fast: 'true'
        eureka.client.service-url.defaultZone: http://admin:admin@peer1/eureka/

  productservice:
    image: gcr.io/awacs-cloud-prod/smart-pharmacy-product-service:latest
    restart: always
    expose:
     - 80
    depends_on:
      - db
      - jms
      - config
    links:
      - db
      - jms
      - config
      - peer1
      - adminserver
    environment:
        PORT: 80
        AUTH_SERVER: authserver
        JAVA_OPTIONS: "-Dawacs_grpc_host=authserver"
        awacs_grpc_host: authserver
        GRPC_PORT: 9345
        grpc.client.__name__.negotiationType: 'PLAINTEXT'
        spring.cloud.config.uri: http://config/
        spring.application.name: 'product-service'
        spring.profiles.active: prod
        spring.cloud.config.enabled: 'true'
        spring.cloud.discovery.enabled: 'false'
        spring.cloud.service-registry.auto-registration.enabled: 'false'
        server.forward-headers-strategy: native
        spring.cloud.config.fail-fast: 'true'
        eureka.client.service-url.defaultZone: http://admin:admin@peer1/eureka/

  otpservice:
     image:  gcr.io/awacs-cloud-prod/twilio-connector-service:latest
     restart: always
     expose:
     - 80
     links:
     - config
     - peer1
     - adminserver
     depends_on:
       - config
       - peer1
       - adminserver
     environment:
        PORT: 80
        spring.cloud.config.uri: http://config/
        spring.application.name: 'otpservice'
        spring.profiles.active: prod
        spring.cloud.config.enabled: 'true'
        spring.cloud.discovery.enabled: 'false'
        spring.cloud.service-registry.auto-registration.enabled: 'false'
        server.forward-headers-strategy: native
        spring.cloud.config.fail-fast: 'true'
        eureka.client.service-url.defaultZone: http://admin:admin@peer1/eureka/

  db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password --explicit-defaults-for-timestamp=ON
    restart: always
    ports:
      - 3306:3306/tcp
    expose:
      - 3306
    environment:
      MYSQL_DATABASE: awacs_cloud
      MYSQL_ROOT_PASSWORD: 'secret'
      MYSQL_USER: "devbot"
      MYSQL_PASSWORD: "devbot"
    volumes:
      - ./db/:/docker-entrypoint-initdb.d/

  jms:
    image: webcenter/activemq:latest
    restart: always
    ports:
      - 61616:61616
      - 8161:80/tcp
      - 61613:61613
    expose:
      - 61616
      - 80
    environment:
      ACTIVEMQ_ADMIN_LOGIN: admin
      ACTIVEMQ_ADMIN_PASSWORD: admin123
      ACTIVEMQ_CONFIG_QUEUES_controller.events.error: controller.events.error

  adminer:
     image: adminer
     restart: always
     expose:
     - 80

  nginx:
   build:
      context: awacs-nginx
      dockerfile: Dockerfile.nginx.qa
   container_name: awacs_nginx
   restart: always
   ports:
   - 80:80
   - 443:443
   expose:
   - 80
   - 443
   links:
    - peer1
    - hystrix
    - bootstrap
    - adminserver
    - authserver
    - otpservice
    - socialweb
    - productservice
    - adminer
   depends_on:
    - peer1
    - hystrix
    - bootstrap
    - adminserver
    - authserver
    - otpservice
    - socialweb
    - productservice
    - adminer

networks:
  overlay:
