{
	"info": {
		"_postman_id": "4a456d37-21f4-4aed-bd1a-f661bc78f411",
		"name": "playground",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth-service",
			"item": [
				{
					"name": "dummy_csp_incident_report",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"csp-report\":{\r\n      \"document-uri\":\"https://example.com/foo/bar\",\r\n      \"referrer\":\"https://www.google.com/\",\r\n      \"violated-directive\":\"default-src self\",\r\n      \"original-policy\":\"default-src self; report-uri /csp-hotline.php\",\r\n      \"blocked-uri\":\"http://evilhackerscripts.com\"\r\n   }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{authserver}}/actuator/csp/report",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"actuator",
								"csp",
								"report"
							]
						}
					},
					"response": []
				},
				{
					"name": "actuator_health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authserver}}/actuator/health",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"actuator",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "001_get_token (authenticate)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Body contains access_token\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false,
						"followAuthorizationHeader": true,
						"followRedirects": false
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{authserver}}/oauth/token?grant_type=password&username={{username}}&password={{password}}",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"oauth",
								"token"
							],
							"query": [
								{
									"key": "grant_type",
									"value": "password"
								},
								{
									"key": "username",
									"value": "{{username}}"
								},
								{
									"key": "password",
									"value": "{{password}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "002_check_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{authserver}}/oauth/check_token?token={{access_token}}",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"oauth",
								"check_token"
							],
							"query": [
								{
									"key": "token",
									"value": "{{access_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "003_new_user_signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains user id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.id);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"changePasswordOnLogon\": false,\r\n    \"pictureId\": null,\r\n    \"userSerial\": null,\r\n    \"adhocSerial\": null,\r\n    \"username\": \"DUMMY129483\",\r\n    \"password\": \"girish125\",\r\n    \"role\": \"Customer\",\r\n    \"resetKey\": null,\r\n    \"name\": \"Girish Test 125\",\r\n    \"address1\": \"Test address1\",\r\n    \"address2\": \"Test address2\",\r\n    \"address3\": \"Test address3\",\r\n    \"cityId\": null,\r\n    \"stateId\": null,\r\n    \"country\": null,\r\n    \"phoneNo\": \"9492929344\",\r\n    \"mobile\": \"9492929344\",\r\n    \"email\": \"nobody113@nowhere.com\",\r\n    \"contactPerson\": \"938833883\",\r\n    \"awacsMTD\": true,\r\n    \"isAdminDelegate\": \"1\",\r\n    \"isAdhoc\": \"1\",\r\n    \"deviceId\": \"1111-cccc-bbb--ddd-eee\",\r\n    \"gCMRegisterKey\": null,\r\n    \"type\": null,\r\n    \"loginType\": null,\r\n    \"providerId\": null,\r\n    \"providerType\": null,\r\n    \"awacsId\": null,\r\n    \"pSPACode\": null,\r\n    \"uniqueMobileCode\": null,\r\n    \"thirdPartySoftware\": null,\r\n    \"thirdPartyCode\": null,\r\n    \"thirdPartyLUM\": null,\r\n    \"thirdPartyLUT\": null,\r\n    \"dlic1\": null,\r\n    \"dlic2\": null,\r\n    \"dlic3\": null,\r\n    \"dlic4\": null,\r\n    \"dlic5\": null,\r\n    \"dlic6\": null,\r\n    \"pOBOTP\": null,\r\n    \"gSTIN\": null,\r\n    \"pAN\": null,\r\n    \"xSource\": null,\r\n    \"pincode\": null,\r\n    \"remarks\": null,\r\n    \"registrationId\": null,\r\n    \"source\": null,\r\n    \"sourceType\": null,\r\n    \"signSource\": null,\r\n    \"signDetail\": null,\r\n    \"createdBy\": null,\r\n    \"createdOn\": null,\r\n    \"modifiedBy\": null,\r\n    \"modifiedOn\": null,\r\n    \"deleted\": \"1\",\r\n    \"deletedBy\": null,\r\n    \"deletedOn\": null,\r\n    \"licenseExpireMailOn\": null,\r\n    \"sync\": true,\r\n    \"lastActivity\": null,\r\n    \"orderSeq\": null,\r\n    \"appVersion\": null,\r\n    \"oSVersion\": null,\r\n    \"platform\": null,\r\n    \"userKind\": null,\r\n    \"bank\": null,\r\n    \"iFSCCode\": null,\r\n    \"corpId\": null,\r\n    \"userId\": null,\r\n    \"accountNumber\": null,\r\n    \"appPackage\": null,\r\n    \"enabled\": true,\r\n    \"verify\": true,\r\n    \"credentialsNonExpired\": true,\r\n    \"syncWithThirdParty\": true,\r\n    \"liveorderBlocked\": false,\r\n    \"accountNonExpired\": true,\r\n    \"admin\": true,\r\n    \"licenseExpire\": true,\r\n    \"syncWithEdxhub\": true,\r\n    \"accountNonLocked\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{authserver}}/api/Users/SignUp",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"api",
								"Users",
								"SignUp"
							]
						}
					},
					"response": []
				},
				{
					"name": "003_get_that_new_user",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{authserver}}/api/users/{{userId}}",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "001_get_token_again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Body contains access_token\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false,
						"followAuthorizationHeader": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{authserver}}/oauth/token?grant_type=password&username={{username}}&password={{password}}",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"oauth",
								"token"
							],
							"query": [
								{
									"key": "grant_type",
									"value": "password"
								},
								{
									"key": "username",
									"value": "{{username}}"
								},
								{
									"key": "password",
									"value": "{{password}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "003_get_principal",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{authserver}}/api/Users/principal",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"api",
								"Users",
								"principal"
							]
						}
					},
					"response": []
				},
				{
					"name": "003_update_password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"admin1234\",\r\n    \"accountExpired\": false,\r\n    \"accountLocked\": false,\r\n    \"credentialsExpired\": false,\r\n    \"enabled\": true,\r\n    \"accountNonLocked\": true,\r\n    \"credentialsNonExpired\": true,\r\n    \"accountNonExpired\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{authserver}}/api/Users/{{userId}}",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"api",
								"Users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "003_update_email_address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"girish.mahajan@yahoo.com\",\r\n    \"aadhar\": \"9999 9929 2999\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{authserver}}/api/Users/{{userId}}",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"api",
								"Users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "003_update_phone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"msisdn\": \"+91 9423178879\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{authserver}}/api/Users/{{userId}}",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"api",
								"Users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_another_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{authserver}}/api/users/{{userId}}",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "dashboard-service",
			"item": [
				{
					"name": "001_dashboard_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  dashboard(userName: \"MHTH200005\"){\r\n    workspaceId\r\n    lastLogin\r\n    user{\r\n      username\r\n      role\r\n      userId\r\n      pAN\r\n      pictureId\r\n      pincode\r\n    }\r\n    schemes{\r\n      productName\r\n      quantity\r\n      schemeStartDate\r\n      schemePercentage\r\n    }\r\n    orders{\r\n      source\r\n      orderNumber\r\n      orderDate\r\n      supplierId\r\n      quantity\r\n      buyerProductName\r\n    }\r\n    payments{\r\n      billNumber\r\n      paymentDate\r\n      paymentAmount\r\n    }\r\n    invoices{\r\n      netInvoiceAmount\r\n      amount\r\n      sGST\r\n      cGST\r\n      reason\r\n      remarks\r\n    }\r\n    receipts{\r\n      buyerId\r\n      amount\r\n      id\r\n    }\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "002_aggregator_dashboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  aggregatorDashboard(userId: \"SUR2086808\", fromDate:\"01-11-2020\", toDate: \"01-03-2021\"){\r\n    distributors{\r\n      id\r\n      name\r\n      address\r\n      completedOrder\r\n      totalOrder\r\n    }\r\n    completedOrder\r\n    totalOrder\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "004_dashboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authserver}}/api/Dashboard/",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"api",
								"Dashboard",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "search-service",
			"item": [
				{
					"name": "search-product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  products(productName: \"parac\"){\r\n    productName\r\n    company\r\n    distributors{\r\n      name\r\n      mobile\r\n      role\r\n      gCMRegisterKey\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://app.awacsdev.com/query",
							"protocol": "http",
							"host": [
								"app",
								"awacsdev",
								"com"
							],
							"path": [
								"query"
							]
						}
					},
					"response": []
				},
				{
					"name": "all states",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authserver}}/public/region/states",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"public",
								"region",
								"states"
							]
						}
					},
					"response": []
				},
				{
					"name": "states wise cities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authserver}}/public/region/cities/8",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"public",
								"region",
								"cities",
								"8"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "smart-aggregator-service",
			"item": [
				{
					"name": "aggregator_purge_user_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  deleteUserFromMaster(specialAccessKey: \"d1c875f76ea6f061c5dc92a14c4bbd8e067a838411ba82608860edb21a160f50\", username:\"GirishAggr1\")\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "aggregator_signup_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\r\n  signup(input: { \r\n    username: \"GirishAggr1\", \r\n    email: \"girish.mahajan@yahoo.com\", \r\n    mobile: \"9168116879\", password: \"giri123\",\r\n    name: \"Girish Mahajan Services Inc\", \r\n    address1: \"Taramandal Colony, Baner road balewadi, India\",\r\n    address2: \"Post91 Baner Pune\"\r\n    pinCode: 411045, \r\n    application: \"appl\", \r\n    cityId: 5374, \r\n    stateId: 19, \r\n    deviceId: \"11\", \r\n    appVersion: \"11\", \r\n    osVersion: \"3\",\r\n    platform: \"4\",\r\n    gcmRegisterKey: \"1\"\r\n  }) \r\n  {\r\n    session\r\n    status\r\n    accessToken\r\n    refreshToken\r\n    expiryInSeconds\r\n    application {\r\n     \tappId\r\n      appName\r\n      description\r\n    }\r\n    iam {\r\n      id\r\n      name\r\n      email\r\n      mobile\r\n      address1\r\n      address2\r\n      username\r\n      city\r\n      state\r\n      lastActivity\r\n      extraInfo\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "aggregator_login_bad_credentials_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  login(username: \"MHTH200005\", password: \"1234\", application: \"AWACS\"){\r\n    session\r\n    status\r\n    accessToken\r\n    refreshToken\r\n    expiryInSeconds\r\n    application{\r\n      appApplicationID\r\n      appApplicationNameNm\r\n      appDescriptiondesc\r\n    }\r\n    iam{\r\n      id\r\n      username\r\n      userId\r\n      role\r\n      pictureId\r\n      name\r\n      address1\r\n      isLicenseExpire\r\n      lastActivity  \r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "aggregator_login_invalid_application_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  login(username: \"GirishAggr\", password: \"foo12345\", application: \"ksahd\"){\r\n    session\r\n    status\r\n    accessToken\r\n    refreshToken\r\n    expiryInSeconds\r\n    application{\r\n      appApplicationID\r\n      appApplicationNameNm\r\n      appDescriptiondesc\r\n    }\r\n    iam{\r\n      userUserNamenm\r\n      lastActivity  \r\n      userPasswordcd\r\n      installStatus\r\n      userEmailIdId\r\n      userAddress1cd\r\n      userAddress2cd\r\n      osVersion\r\n      platform\r\n      userApplicationIdcd\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "aggregator_forgot_password_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  forgotPassword(mobile: \"9168116879\", application: \"abcd\"){\r\n    session\r\n    status\r\n    application{\r\n      appId\r\n      appName\r\n      description\r\n    }\r\n    iam{\r\n      id\r\n      username\r\n      name\r\n      email\r\n      address1\r\n      address2\r\n      otpValidated\r\n      city\r\n      state\r\n      lastActivity\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "aggregator_otp_verification_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  validateOneTimePassword(mobile: \"9168116879\", application: \"AWACS\", otp: \"925844\"){\r\n    status\r\n    session\r\n    application{\r\n      appId\r\n      appName\r\n      description\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "aggregator_login_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\r\n  login(username: \"GirishAggr1\", password: \"giri123\", application: \"AWACS\") {\r\n    session\r\n    status\r\n    accessToken\r\n    refreshToken\r\n    expiryInSeconds\r\n    application {\r\n      appId\r\n      appName\r\n      description\r\n    }\r\n    iam {\r\n      id\r\n      lastActivity\r\n      name\r\n      city\r\n      state\r\n      address1\r\n      address2\r\n    }\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "awacsCity - aggregator",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  awacsCity(name: \"pun\"){\r\n    name\r\n    stateId\r\n    id\r\n  },\r\n  allCitiesByStateId(stateId: 19) {\r\n    id\r\n    name\r\n    stateId\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "aggregator_dashboard_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  aggregatorDashboard(aggregatorUserId: 429855, fromDate:\"01-11-2020\", toDate: \"01-03-2021\"){\r\n    distributors{\r\n      id\r\n      name\r\n      address\r\n      completedOrder\r\n      totalOrder\r\n    }\r\n    completedOrder\r\n    totalOrder\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "aggregator_dashboard_deep_view_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  aggregatorDashboardDeepView(aggregatorUserId: 429855, fromDate: \"01-11-2020\", toDate: \"01-03-2021\") {\r\n    distributors {\r\n      profile{\r\n        id\r\n        name\r\n        username\r\n      }\r\n      completedOrder\r\n      totalOrder\r\n      orders {\r\n        retailerCode\r\n        orderNumber\r\n        supplierId\r\n        receivedOn\r\n        invoiceNumber\r\n        buyerId\r\n        retailerCode\r\n        products {\r\n          productCode\r\n          productName\r\n          productPack\r\n          quantity\r\n          freeQuantity\r\n          suppliedQuantity\r\n          suppliedFreeQuantity\r\n          bounceOrderQuantity\r\n          shortOrderQuantity\r\n        }\r\n      }\r\n    }\r\n    completedOrder\r\n    totalOrder\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "aggregator_get_my_partners_details_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  getMyPartnersForAggregatorDetails(aggregatorUserId: 429826) {\r\n    iam {\r\n      id\r\n      name\r\n      username\r\n      city\r\n    }\r\n    partners {\r\n      retailerCode\r\n      name\r\n      city\r\n      address\r\n    }\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "retailer_by_cities_aggregator_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  retailersByCitiesAggregator(userId: 429855, cities: [\"10629\"]) {\r\n    region\r\n    city\r\n    retailers {\r\n      name\r\n      username\r\n      address1\r\n      lastActivity\r\n    }\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "aggregator_my_orders_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  myOrdersAggregator(aggregatorUserName: \"vishnuagg\", fromDate: \"01-10-2020\", toDate: \"03-02-2021\") {\r\n    iam {\r\n      id\r\n      name\r\n      email\r\n      mobile\r\n      address1\r\n      address2\r\n      username\r\n      lastActivity\r\n    }\r\n    aggregatorOrders {\r\n      ...OrderFragment\r\n    }\r\n    allOrders {\r\n      ...OrderFragment\r\n    }\r\n  }\r\n}\r\n\r\nfragment OrderFragment on OrderResponseSubset1 {\r\n  retailer {\r\n    name\r\n  }\r\n  apps {\r\n    source {\r\n      appId\r\n      appName\r\n    }\r\n    suppliers {\r\n      supplier{\r\n        name\r\n        email\r\n        mobile\r\n        username\r\n      }\r\n      orders {\r\n        orderNumber\r\n        receivedOn\r\n        invoiceNumber\r\n        buyerId\r\n        supplierId\r\n        products {\r\n          productCode\r\n          productName\r\n          productPack\r\n          quantity\r\n          freeQuantity\r\n          suppliedQuantity\r\n          suppliedFreeQuantity\r\n          bounceOrderQuantity\r\n          shortOrderQuantity\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "aggregator_is_live_order_free_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  isLiveOrderFree(workspace: \"1345\", userName: \"THA2004445\", deviceId: \"abcd1234\", appVersion: \"smartaggreg.v3\")\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "aggregator_purge_user_graphql_again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  deleteUserFromMaster(specialAccessKey: \"d1c875f76ea6f061c5dc92a14c4bbd8e067a838411ba82608860edb21a160f50\", username:\"GirishAggr\")\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "workspace-service",
			"item": [
				{
					"name": "001_workspace_by_id_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  workspace(workspace: \"MHTH200005\") {\r\n    id\r\n    name\r\n    address1\r\n    address2\r\n    address3\r\n    lastIpAddress\r\n    email\r\n    phoneNo\r\n    liveorderCount\r\n    workspace\r\n    timeZoneId\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "order-service",
			"item": [
				{
					"name": "001_myorders_rest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authserver}}/api/Order/MyOrders?Workspace=603387",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"api",
								"Order",
								"MyOrders"
							],
							"query": [
								{
									"key": "Workspace",
									"value": "603387"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "001_myorders_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  myOrders(workspaceId:123049,  fromDate: \"01-12-2020\", toDate:\"20-12-2020\"){\r\n    orderDate,\r\n    orderNumber,\r\n    id,\r\n    supplierId,\r\n    buyerId,\r\n\t  buyerProductCode,\r\n    buyerProductName,\r\n    quantity\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "002_myorders_lite",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authserver}}/api/Order/MyOrdersLite?Workspace=123049&FromDate=15-12-2020&ToDate=17-12-2020",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"api",
								"Order",
								"MyOrdersLite"
							],
							"query": [
								{
									"key": "Workspace",
									"value": "123049"
								},
								{
									"key": "FromDate",
									"value": "15-12-2020"
								},
								{
									"key": "ToDate",
									"value": "17-12-2020"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "003_ordersummary_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  orderByOrderNumber(orderNumber: \"AO187\"){\r\n    id\r\n    source\r\n    buyerId\r\n    orderNumber\r\n    buyerProductName\r\n    quantity\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "003_ordersummary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authserver}}/api/Order/OrderSummary?OrderNumber=SO00696071",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"api",
								"Order",
								"OrderSummary"
							],
							"query": [
								{
									"key": "OrderNumber",
									"value": "SO00696071"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "005_supplier_info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authserver}}/api/Supplier/AIOCD2843",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"api",
								"Supplier",
								"AIOCD2843"
							]
						}
					},
					"response": []
				},
				{
					"name": "009_freshorder_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{ \r\n  freshOrder(workspaceId: 123049, remarks: \"New Order\", \r\n    buyerId: \"1\", orderItems: [\r\n      {\r\n       source: \"smartpharmcy\"\r\n       quantity: 3.0\r\n       supplierId: \"10\"\r\n       buyerProductName: \"Cerafome 10\",\r\n       supplierProductCode: \"Cerafome Tab 10\"\r\n       buyerProductCode: \"AIOCD10\"\r\n      },\r\n      {\r\n       source: \"smartpharmcy\"\r\n       quantity: 3.0\r\n       supplierId: \"10\"\r\n       buyerProductName: \"Cerafome 20\",\r\n       supplierProductCode: \"Cerafome Tab 20\"\r\n       buyerProductCode: \"AIOCD10\"\r\n      }\r\n    ]\r\n  ) {\r\n    quantity\r\n    freeQuantity\r\n    buyerProductName\r\n    supplierId\r\n    id\r\n    source\r\n    orderNumber\r\n    orderDate\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "009_updateorder_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  \r\n  updateOrder(orderNumber: \"AO35\", orderItems: [\r\n      {\r\n       source: \"smartpharmcy\"\r\n       quantity: 5.0\r\n       supplierId: \"10\"\r\n       buyerProductName: \"Cerafome 10\",\r\n       supplierProductCode: \"Cerafome Tab 10\"\r\n       buyerProductCode: \"AIOCD10\"\r\n      },\r\n      {\r\n       source: \"smartpharmcy\"\r\n       quantity: 8.0\r\n       supplierId: \"10\"\r\n       buyerProductName: \"Cerafome 10\",\r\n       supplierProductCode: \"Cerafome Tab 10\"\r\n       buyerProductCode: \"AIOCD09\"\r\n      },\r\n      {\r\n       source: \"smartpharmcy\"\r\n       quantity: 12.0\r\n       supplierId: \"10\"\r\n       buyerProductName: \"Sophramicine 10\",\r\n       supplierProductCode: \"Sophramicine 10\"\r\n       buyerProductCode: \"AIOCD11\"\r\n      }\r\n    ]\r\n  ) {\r\n    quantity\r\n    freeQuantity\r\n    buyerProductName\r\n    supplierId\r\n    id\r\n    source\r\n    orderNumber\r\n    orderDate\r\n    remarks\r\n  }\r\n  \r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "009_cancelorder_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  cancelOrder(orderNumber: \"AO179\"){\r\n    id\r\n    supplierId\r\n    status\r\n  }\r\n  \r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "009_cancel_order_item_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  cancelOrderItem(orderId: 182){\r\n    id\r\n    supplierId\r\n    status\r\n  }\r\n  \r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "009_delete_order_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  deleteOrder(orderNumber: \"AO179\")\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "009_delete_order_item_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  deleteOrderItem(orderId: 182)  \r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "retailer-service",
			"item": [
				{
					"name": "001_retailer_invoice_by_retailercode_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  retailerInvoice(retailerCode: \"DUMMY101\", fromDate: \"13-02-2020\", toDate: \"03-03-2021\"){\r\n    invoiceNumber\r\n    billDate\r\n    billDate\r\n    orderDate\r\n    orderNumber\r\n    netInvoiceAmount\r\n    paymentDueDate\r\n    sgstAmount\r\n    cgstAmount\r\n    products{\r\n      productCode\r\n      productName\r\n      productPack\r\n      quantity\r\n      freeQuantity\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "001_retailer_smart_distributor_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  retailerSmartDistributorsList(userName: \"FooBar\") {\r\n    id\r\n    name\r\n    supplierId\r\n    city\r\n    showClosing\r\n    showHalfScheme\r\n    doNotShowPrice\r\n    doNotShowScheme\r\n    doNotShowToCustomer\r\n    doNotShowOutstanding\r\n    address1\r\n    address2\r\n    address3\r\n    enableSchemeEdit\r\n    enableSchemePEdit\r\n    enableSpeacialScheme\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "001_retailer_outstandings_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  retailerOutstanding(supplierId: \"FooBar\", fromDate: \"01-01-2020\", toDate: \"01-03-2021\"){\r\n    userId\r\n    customerCode\r\n    documentDate\r\n    documentNumber\r\n    amount\r\n    adjustedAmount\r\n    dueDate\r\n    pendingAmount\r\n    workspaceId\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "001_retailer_companion_linkages_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  retailerCompanionLinkageByUsername(userName: \"vishnuagg\"){\r\n    retailerCode\r\n    retailerName\r\n    mappedStockistCount\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "001_stockist_details_companions_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  stockistDetailsByStockistCodes(stockistCodes: [\"MHTH200007\", \"AIOCD2561\"]) {\r\n    username\r\n    name\r\n    email\r\n    mobile\r\n    address1\r\n    address2\r\n    city\r\n    extraInfo\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "invoice-service",
			"item": [
				{
					"name": "001_all_invoices_by_buyerid_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\ninvoicesByBuyerId(buyerId: \"5\", \r\n  fromDate: \"01-12-2010\", \r\n  toDate:\"20-12-2021\"){\r\n    id\r\n    developerId\r\n    supplierId\r\n    billNumber\r\n    billDate\r\n    buyerId\r\n    reason\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "002_invoice_by_billnumber_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  invoiceByBillNumber(billNumber: \"135975\") {\r\n    id\r\n    developerId\r\n    supplierId\r\n    billNumber\r\n    billDate\r\n    buyerId\r\n    reason\r\n    supplierProductCode\r\n    orderDate\r\n    orderNumber\r\n    orderSource\r\n    taxableAmount\r\n    igstAmount\r\n    cessAmount\r\n    cess\r\n    buyerProductCode\r\n    quantity\r\n    freeQuantity\r\n    challanNumber\r\n    challanDate\r\n    mrp\r\n    addlScheme\r\n    addlDiscountAmount\r\n    netInvoiceAmount\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "003_invoices_by_supplier_id_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  \r\n  invoicesBySupplierId(supplierId: \"AIOCDW625\"){\r\n    id\r\n    buyerId\r\n    billNumber\r\n    supplierId\r\n    netInvoiceAmount\r\n    orderNumber\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "payment-service",
			"item": [
				{
					"name": "001_all_payments_by_supplier_id_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  paymentsBySupplierId(supplierId: \"MHTH200015\", fromDate: \"01-01-2010\", toDate: \"01-02-2021\") {\r\n    supplier {\r\n      workspaceId\r\n      name\r\n      address1\r\n      cityId\r\n      stateId\r\n      lastActivity\r\n    }\r\n    payments {\r\n      retailer {\r\n        name\r\n        address1\r\n      }\r\n      transactions {\r\n        billDate\r\n        billNumber\r\n        billAmount\r\n        paymentDate\r\n        paymentAmount\r\n      }\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "002_all_payments_by_buyer_id_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  paymentsByBuyerId(buyerId: \"DOM2001662\", fromDate: \"01-01-2010\", toDate: \"01-02-2021\") {\r\n    buyer {\r\n      workspaceId\r\n      name\r\n      address1\r\n      cityId\r\n      stateId\r\n      lastActivity\r\n    }\r\n    payments {\r\n      distributor {\r\n        name\r\n        address1\r\n      }\r\n      transactions {\r\n        billDate\r\n        billNumber\r\n        billAmount\r\n        paymentDate\r\n        paymentAmount\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "receipts-service",
			"item": [
				{
					"name": "001_receipt_by_workspace_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  receiptsByWorkspaceId(workspaceId: 2){\r\n    date\r\n    modeOfPayment\r\n    amount\r\n    againstOf\r\n    buyerId\r\n    bank\r\n    chequeNumber\r\n    workspaceId\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "companion-service",
			"item": [
				{
					"name": "001_companion_by_workspace_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  companionByWorkspaceId(workspaceId: 1){\r\n    companionId\r\n    userId\r\n    name\r\n    bank\r\n    ifscCode\r\n    pan\r\n    phone\r\n    email\r\n    salesmenCode\r\n    workspaceId\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "states-service",
			"item": [
				{
					"name": "001_states_by_id_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  stateById(id: 1){\r\n    id\r\n    name\r\n    country\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "001_all_states_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  allStates{\r\n    id\r\n    name\r\n    country\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "001_all_cities_by_state_id_graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  allCitiesByStateId(stateId: 1){\r\n    id\r\n\t\tname\r\n    stateId\r\n    acronym\r\n    std_Code\r\n    districtId\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{authserver}}/graphql",
							"host": [
								"{{authserver}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "product-service",
			"item": [
				{
					"name": "003_get_products",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{productservice}}/api/product/344",
							"host": [
								"{{productservice}}"
							],
							"path": [
								"api",
								"product",
								"344"
							]
						}
					},
					"response": []
				},
				{
					"name": "004_get_all_products",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{productservice}}/api/product/all",
							"host": [
								"{{productservice}}"
							],
							"path": [
								"api",
								"product",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "005_get_all_product_order",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{productservice}}/api/product/order/all",
							"host": [
								"{{productservice}}"
							],
							"path": [
								"api",
								"product",
								"order",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "007_upload_pdf_file",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": ".cockpit/demo.pdf"
								}
							]
						},
						"url": {
							"raw": "{{productservice}}/api/files/",
							"host": [
								"{{productservice}}"
							],
							"path": [
								"api",
								"files",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "008_process_pdf",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{productservice}}/api/files/pdf/tenant/swami_samarth_medical/demo.pdf",
							"host": [
								"{{productservice}}"
							],
							"path": [
								"api",
								"files",
								"pdf",
								"tenant",
								"swami_samarth_medical",
								"demo.pdf"
							]
						}
					},
					"response": []
				},
				{
					"name": "009_upload_excel_file",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": ".cockpit/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{productservice}}/api/files/",
							"host": [
								"{{productservice}}"
							],
							"path": [
								"api",
								"files",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "010_process_excel",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{productservice}}/api/files/excel/tenant/swami_samarth_medical/distributor/test.xlsx",
							"host": [
								"{{productservice}}"
							],
							"path": [
								"api",
								"files",
								"excel",
								"tenant",
								"swami_samarth_medical",
								"distributor",
								"test.xlsx"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "otp-service",
			"item": [
				{
					"name": "send_success_sms_otp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followAuthorizationHeader": true,
						"strictSSL": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"number\": \"9168116879a\",\r\n  \"message\": \"Your test message OTP for Smart Platform is abc123\",\r\n  \"application\": \"AWACS\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{otpservice}}/public/api/70d24f6f465ea405b5d59460a36a58716f34018acf237657ccb307381f717b7b/send-message",
							"host": [
								"{{otpservice}}"
							],
							"path": [
								"public",
								"api",
								"70d24f6f465ea405b5d59460a36a58716f34018acf237657ccb307381f717b7b",
								"send-message"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "liveops-service",
			"item": [
				{
					"name": "recaptcha",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://qa.awacscloud.tech/recaptcha/api/captcha?g-recaptcha-response=abc123",
							"protocol": "http",
							"host": [
								"qa",
								"awacscloud",
								"tech"
							],
							"path": [
								"recaptcha",
								"api",
								"captcha"
							],
							"query": [
								{
									"key": "g-recaptcha-response",
									"value": "abc123"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sendmail",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"from\":\"dev@aiocdawacs.com\",\n\t\"to\":\"dev@aiocdawacs.com\",\n\t\"subject\":\"Email Test Message | Integration\",\n\t\"content\":\"this is a email test for in house integration verification\",\n\t\"name\":\"Developer Awacs\"\n}"
						},
						"url": {
							"raw": "{{emailservice}}/sendmail",
							"host": [
								"{{emailservice}}"
							],
							"path": [
								"sendmail"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}