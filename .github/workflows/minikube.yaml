name: Minikube Staging

on: [push]

jobs:
  example:
    name: Minikube-Kubernetes Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Generate certificates
        uses: kofemann/action-create-certificate@v0.0.4
        with:
          hostcert: 'certificate.crt'
          hostkey:  'private.key'
          cachain:  'ca-chain.crt'
      - name: Use generated certificates
        run: |
            ls -lrta
            mkdir zerossl
            # sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout zerossl/cert.key -out zerossl/cert.crt
            # openssl x509 -in hostcert.pem -noout -text
            
            cp certificate.crt zerossl/
            # cp private.key zerossl/
            touch zerossl/private.key
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@master
        with:
          minikube version: 'v1.15.1'
          kubernetes version: 'v1.19.2'
          github token: ${{ secrets.GITHUB_TOKEN }}
      - name: Interact with the cluster
        run: |
            kubectl config get-contexts
            kubectl config use-context minikube
            kubectl get all
            kubectl config view
            kubectl create secret tls app.awacscloud.tech --cert=zerossl/certificate.crt --key=zerossl/private.key
            kubectl apply -f adminer-deployment.yaml
            kubectl apply -f adminer-service.yaml
            
            kubectl apply -f db-deployment.yaml
            kubectl apply -f db-service.yaml
            
            kubectl apply -f jms-deployment.yaml
            kubectl apply -f jms-service.yaml
            
            sleep 10
            
            kubectl apply -f productservice-deployment.yaml
            kubectl apply -f productservice-service.yaml
            
            kubectl apply -f socialweb-deployment.yaml
            kubectl apply -f socialweb-service.yaml
            
            kubectl apply -f adminserver-deployment.yaml
            kubectl apply -f adminserver-service.yaml
            
            kubectl apply -f authserver-deployment.yaml
            kubectl apply -f authserver-service.yaml
            
            sleep 30
            
            kubectl apply -f nginx-deployment.yaml
            kubectl apply -f nginx-service.yaml
            
            sleep 30;
            
            # kubectl apply -f multi-app-ingress.yaml
            # kubectl expose service/nginx --port=80 --target-port=8080 --name=nginx-ingress --type=LoadBalancer
            
            sleep 10
            kubectl get all
            # minikube service nginx
