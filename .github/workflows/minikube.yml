name: Minikube Staging
on: [push]
jobs:
  play:
    name: Minikube-Kubernetes Spin
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@master
        with:
          minikube version: 'v1.15.1'
          kubernetes version: 'v1.19.2'
          github token: ${{ secrets.GITHUB_TOKEN }}
      - name: Interact with the cluster
        run: |
            kubectl config use-context minikube
            kubectl get all
            kubectl config view
            kubectl delete all --all
            kubectl create secret tls qa.awacscloud.tech --cert=zerossl/qa_certificate.crt --key=zerossl/qa_private.key
            kubectl apply -f config-deployment.yml
            kubectl apply -f config-service.yml
            kubectl apply -f authserver-deployment.yaml
            kubectl apply -f authserver-service.yaml
            kubectl apply -f otpservice-service.yaml
            kubectl apply -f otpservice-deployment.yaml
            kubectl create configmap nginx-config --from-file=awacs-nginx-qa.conf
            kubectl create configmap nginx-ssl  --from-file=zerossl/qa.awacscloud.tech.crt --from-file=zerossl/qa.awacscloud.tech.key
            sleep 60;
            kubectl apply -f nginx-deployment.yaml
            kubectl apply -f nginx-service.yaml
            sleep 60;
            kubectl get all
            #minikube service nginx


            # kubectl apply -f multi-app-ingress.yaml
            # kubectl expose service/nginx --port=80 --target-port=8080 --name=nginx-ingress --type=LoadBalancer

            # sudo apt-get -y install links2
             
          

            # minikube_host=$(minikube service nginx | grep 443 | sed -e 's/.*http/https/g' -e 's/ .*//g')
            # minikube_host=$(kubectl get services nginx --output jsonpath={.status.loadBalancer.ingress[0].ip})
            # echo "Hoping at $minikube_host"

            #curl -m 30 -k -X POST \
            #  https://192.168.42.71/authserver/oauth/token \
            #  -u "neo:neo" \
            #  -F grant_type=password \
            #  -F username=admin \
            #  -F password=admin1234 \
            #  -F client_id=neo | json_pp
            #
            #echo "Implicit and client credentials call"
            #curl -m 30 -k -X POST \
            #   https://192.168.42.71/authserver/oauth/token \
            #  -u "spring-security-oauth2-read-write-client:spring-security-oauth2-read-write-client-password1234*" \
            #  -F grant_type=client_credentials | json_pp
